{"version":3,"sources":["component/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTab","onTabSelected","className","map","tab","type","classNames","id","onClick","title","content","App","state","selectedTabId","tabId","setState","findTab","find","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"8QAUaA,EAAwB,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,YAAaC,EAAtB,EAAsBA,cAAtB,OACnC,gCACE,oBAAIC,UAAU,YAAd,SACGH,EAAKI,KAAI,SAAAC,GAAG,OACX,oBACEF,UAAU,aADZ,SAIE,wBACEG,KAAK,SACLH,UAAWI,IACT,eACCN,EAAYO,KAAOH,EAAIG,IAAO,0BAEjCC,QAAS,kBAAOR,EAAYO,KAAOH,EAAIG,IAAON,EAAcG,EAAIG,KANlE,SAQE,qBAAKL,UAAU,cAAf,SAA8BE,EAAIK,WAV/BL,EAAIG,SAef,mBAAGL,UAAU,gBAAb,SACGF,EAAYU,cC5BbX,G,MAAc,CAClB,CAAEQ,GAAI,QAASE,MAAO,QAASC,QAAS,eACxC,CAAEH,GAAI,QAASE,MAAO,QAASC,QAAS,eACxC,CAAEH,GAAI,QAASE,MAAO,QAASC,QAAS,iBAO7BC,EAAb,4MACEC,MAAe,CACbC,cAAed,EAAK,GAAGQ,IAF3B,EAKEN,cAAgB,SAACa,GACf,EAAKC,SAAS,CACZF,cAAeC,KAPrB,EAWEE,QAAU,SAACF,GACT,OAAOf,EAAKkB,MAAK,SAAAb,GAAG,OAAIA,EAAIG,KAAOO,MAAUf,EAAK,IAZtD,4CAeE,WACE,IAAQc,EAAkBK,KAAKN,MAAvBC,cACFb,EAAckB,KAAKF,QAAQH,GAEjC,OACE,sBAAKX,UAAU,MAAf,UACE,qBAAIA,UAAU,aAAd,UACG,oBACD,sBAAMA,UAAU,cAAhB,SACGF,EAAYS,WAGjB,cAAC,EAAD,CACEV,KAAMA,EACNC,YAAaA,EACbC,cAAeiB,KAAKjB,uBA9B9B,GAAyBkB,IAAMC,W,MCV/BC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.5be80651.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport './Tabs.scss';\n\ntype Props = {\n  tabs: Tab[],\n  selectedTab: Tab,\n  onTabSelected: (tabId: string) => void,\n};\n\nexport const Tabs: React.FC<Props> = ({ tabs, selectedTab, onTabSelected }) => (\n  <div>\n    <ul className=\"Tab__list\">\n      {tabs.map(tab => (\n        <li\n          className=\"Tabs__item\"\n          key={tab.id}\n        >\n          <button\n            type=\"button\"\n            className={classNames(\n              'Tabs__button',\n              (selectedTab.id === tab.id) && 'Tabs__button--selected',\n            )}\n            onClick={() => (selectedTab.id !== tab.id) && onTabSelected(tab.id)}\n          >\n            <div className=\"Tabs__title\">{tab.title}</div>\n          </button>\n        </li>\n      ))}\n    </ul>\n    <p className=\"Tabs__content\">\n      {selectedTab.content}\n    </p>\n  </div>\n);\n","import React from 'react';\nimport { Tabs } from './component/Tabs';\nimport './App.scss';\n\nconst tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\ntype State = {\n  selectedTabId: string,\n};\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    selectedTabId: tabs[0].id,\n  };\n\n  onTabSelected = (tabId: string) => {\n    this.setState({\n      selectedTabId: tabId,\n    });\n  };\n\n  findTab = (tabId: string) => {\n    return tabs.find(tab => tab.id === tabId) || tabs[0];\n  };\n\n  render() {\n    const { selectedTabId } = this.state;\n    const selectedTab = this.findTab(selectedTabId);\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"App__title\">\n          {'Selected tab is: '}\n          <span className=\"currentTabs\">\n            {selectedTab.title}\n          </span>\n        </h1>\n        <Tabs\n          tabs={tabs}\n          selectedTab={selectedTab}\n          onTabSelected={this.onTabSelected}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\nimport './index.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}